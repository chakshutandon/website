image: alpine:3.13.6

stages:
  - prepare
  - build
  - deploy

prepare:hugo:
  image: docker:stable
  services:
    - docker:dind
  stage: prepare
  script:
    - docker login -u $CI_REGISTRY_USER -p $CI_REGISTRY_PASSWORD $CI_REGISTRY
    - docker build -t $CI_REGISTRY/$CI_PROJECT_PATH/hugo:latest -f docker/hugo.dockerfile .
    - docker push $CI_REGISTRY/$CI_PROJECT_PATH/hugo:latest
  only:
    changes:
      - docker/hugo.dockerfile

prepare:firebase:
  image: docker:stable
  services:
    - docker:dind
  stage: prepare
  script:
    - docker login -u $CI_REGISTRY_USER -p $CI_REGISTRY_PASSWORD $CI_REGISTRY
    - docker build -t $CI_REGISTRY/$CI_PROJECT_PATH/firebase:latest -f docker/firebase.dockerfile .
    - docker push $CI_REGISTRY/$CI_PROJECT_PATH/firebase:latest
  only:
    changes:
      - docker/firebase.dockerfile

build:hugo:
  image: $CI_REGISTRY/$CI_PROJECT_PATH/hugo
  stage: build
  script:
    - hugo
  needs:
    - prepare:hugo
  artifacts:
    paths: ['public']
    expire_in: 2 hrs

# deploy:staging:
#   stage: deploy
#   environment:
#     name: staging
#   script:
#     - ls ./bin
#     - ./bin/firebase
#   needs:
#     - install
#     - build
  # only:
  #   - master

# staging:
#   stage: deploy
#   environment:
#     name: staging
#   only:
#     - master
#   image: node:alpine
#   dependencies:
#     - build
#   script:
#     - npm install -g firebase-tools
#     - firebase use staging --token $FIREBASE_DEPLOY_KEY
#     - firebase deploy -m "Pipeline $CI_PIPELINE_ID, Job $CI_JOB_ID" --non-interactive --token $FIREBASE_DEPLOY_KEY

# prod:
#   stage: deploy
#   environment:
#     name: prod
#   when: manual
#   only:
#     - master
#   image: node:alpine
#   dependencies:
#     - build
#   script:
#     - npm install -g firebase-tools
#     - firebase use production --token $FIREBASE_DEPLOY_KEY
#     - firebase deploy -m "Pipeline $CI_PIPELINE_ID, Job $CI_JOB_ID" --non-interactive --token $FIREBASE_DEPLOY_KEY
