image: alpine:3.13.6

stages:
  - init
  - build
  - deploy

.build:docker:
  image: docker:stable
  services:
    - docker:dind
  script:
    - docker login -u $CI_REGISTRY_USER -p $CI_REGISTRY_PASSWORD $CI_REGISTRY
    - docker build -t $CI_REGISTRY/$CI_PROJECT_PATH/${IMAGE_NAME}:latest -f docker/${IMAGE_NAME}.dockerfile .
    - docker push $CI_REGISTRY/$CI_PROJECT_PATH/${IMAGE_NAME}:latest

.deploy:firebase:
  image: $CI_REGISTRY/$CI_PROJECT_PATH/firebase
  before_script:
    - export GOOGLE_APPLICATION_CREDENTIALS=$SERVICE_ACCOUNT_KEY

init:hugo:
  extends: .build:docker
  stage: init
  variables:
    IMAGE_NAME: hugo
  only:
    changes:
      - docker/hugo.dockerfile

init:firebase:
  extends: .build:docker
  stage: init
  variables:
    IMAGE_NAME: firebase
  only:
    changes:
      - docker/firebase.dockerfile

build:
  image: $CI_REGISTRY/$CI_PROJECT_PATH/hugo
  stage: build
  script:
    - hugo
  artifacts:
    paths: ['public']
    expire_in: 2 hrs

deploy:staging:
  extends: .deploy:firebase
  stage: deploy
  environment:
    name: review/$CI_COMMIT_SHORT_SHA
    deployment_tier: staging
  script:
    - firebase hosting:channel:deploy --non-interactive $CI_COMMIT_SHORT_SHA

deploy:prod:
  extends: .deploy:firebase
  stage: deploy
  environment:
    name: production
    url: https://chakshutandon.com
  script:
    - firebase deploy --only hosting -m "Pipeline $CI_PIPELINE_ID, Job $CI_JOB_ID" --non-interactive
  when: manual
  only:
    - master
