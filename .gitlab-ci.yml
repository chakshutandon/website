image: alpine:3.13.6

stages:
  - prepare
  - build
  - deploy

.build:docker:
  image: docker:stable
  services:
    - docker:dind
  script:
    - docker login -u $CI_REGISTRY_USER -p $CI_REGISTRY_PASSWORD $CI_REGISTRY
    - docker build -t $CI_REGISTRY/$CI_PROJECT_PATH/${IMAGE_NAME}:latest -f docker/${IMAGE_NAME}.dockerfile .
    - docker push $CI_REGISTRY/$CI_PROJECT_PATH/${IMAGE_NAME}:latest

.deploy:firebase:
  image: $CI_REGISTRY/$CI_PROJECT_PATH/firebase
  environment:
    name: ${ENVIRONMENT}
  script:
    - firebase use ${ENVIRONMENT} --token $FIREBASE_DEPLOY_KEY
    - firebase deploy -m "Pipeline $CI_PIPELINE_ID, Job $CI_JOB_ID" --non-interactive --token $FIREBASE_DEPLOY_KEY

prepare:hugo:
  extends: .build:docker
  stage: prepare
  variables:
    IMAGE_NAME: hugo
  only:
    changes:
      - docker/hugo.dockerfile

prepare:firebase:
  extends: .build:docker
  stage: prepare
  variables:
    IMAGE_NAME: firebase
  only:
    changes:
      - docker/firebase.dockerfile

build:
  image: $CI_REGISTRY/$CI_PROJECT_PATH/hugo
  stage: build
  script:
    - hugo
  artifacts:
    paths: ['public']
    expire_in: 2 hrs

deploy:staging:
  extends: .deploy:firebase
  stage: deploy
  variables:
    ENVIRONMENT: staging
  only:
    - master

deploy:prod:
  extends: .deploy:firebase
  stage: deploy
  variables:
    ENVIRONMENT: prod
  when: manual
  only:
    - master
